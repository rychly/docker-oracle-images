name: Build and publish Oracle Instant Client container images to GitHub Container Registry

on:
  push:
    branches:
      - main
    paths:
      - 'OracleInstantClient/*/19/*'
      - 'OracleInstantClient/*/21/*'
      - '.github/workflows/build-and-push-instantclient-images.yml'
  workflow_dispatch:

jobs:
  push:
    name: Build and push Oracle Instant Client images

    runs-on: ubuntu-latest

    outputs:
      ol: ${{ steps.linux-version.outputs.ol }}
      ic: ${{ steps.linux-version.outputs.ic }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          # We need "some" commit history to check for changed files
          fetch-depth: 32

      - name: Determine which images to build
        id: linux-version
        working-directory: OracleInstantClient
        run: |
          changes=$(mktemp)
          # workflow is only in the workflow_dispatch event payload
          workflow="${{ github.event.workflow }}"
          if [[ -z ${workflow} ]]; then
            # Push event - retrieve list of changed files
            git diff --name-only '${{ github.event.before }}..${{ github.event.after }}' > "${changes}"
            if grep -q build-and-push-instantclient-images.yml "${changes}"; then
              echo "PUSH: Action updated: rebuilding all images"
              ol="oraclelinux7 oraclelinux8"
              ic="19 21"
            else
              echo "PUSH: Rebuilding changed images only"
              if grep -q oraclelinux7 "${changes}"; then
                ol="oraclelinux7"
              fi
              if grep -q oraclelinux8 "${changes}"; then
                ol="${ol} oraclelinux8"
              fi
              if grep -q /19/ "${changes}"; then
                ic="19"
              fi
              if grep -q /21/ "${changes}"; then
                ic="${ic} 21"
              fi
            fi
          else
            echo "MANUAL: Rebuilding all"
            ol='oraclelinux7 oraclelinux8'
            ic="19 21"
          fi
          echo "Rebuilding: ${ol} ${ic}"
          echo "::set-output name=ol::${ol}"
          echo "::set-output name=ic::${ic}"
          rm "${changes}"

      - name: Log into GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "${GITHUB_ACTOR,,}" --password-stdin ghcr.io

      - name: Build Oracle Instant Client
        run: |
          for o in ${{ steps.linux-version.outputs.ol }}
          do
            for i in ${{ steps.linux-version.outputs.ic }}
            do
              docker build --tag "ghcr.io/${GITHUB_ACTOR,,}/${o}-instantclient:${i}" OracleInstantClient/${o}/${i}
            done
          done

      - name: Push to GitHub Container Registry
        run: |
          for o in ${{ steps.linux-version.outputs.ol }}
          do
            for i in ${{ steps.linux-version.outputs.ic }}
            do
              docker push "ghcr.io/${GITHUB_ACTOR,,}/${o}-instantclient:${i}"
            done
          done
